env:
  global:
    - PACKAGE_NAME: fitgrid  # for the conda_upload.sh deploy script

language: minimal

jobs:
  include:
    - name: "3.6 build"
      env: PYV=3.6
    - name: "3.7 build"
      env: PYV=3.7
    - name: "3.8 build"
      env: PYV=3.8
    - name: "default python build"
      env: PYV=""

before_install:
  # b.c conda build GIT_BUILD_STR works (or not) in mysterious ways ...
  # pfx g means ordinary commit, r means github tagged vM.N.P release
  - if [[ $TRAVIS_TAG =~ v[0-9]+\.[0-9]+\.[0-9]+ ]]; then pfx=r; else pfx=g; fi
  - export GIT_ABBREV_COMMIT=${pfx}$(git log --full-history --abbrev-commit --oneline -n 1 | awk '{print $1}')
  - echo "git commit $GIT_ABBREV_COMMIT"
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - source $HOME/miniconda/etc/profile.d/conda.sh && conda activate
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda info -a

install:
  - conda install -q conda-build conda-verify
  - conda build --python=${PYV} -c defaults -c conda-forge conda

script:
  # install and test py 3.x variants
  - conda create -n pyenv_${PYV} python=${PYV} fitgrid -c local -c defaults -c conda-forge
  - conda activate pyenv_${PYV}
  - conda install black pytest pytest-cov
  - conda list
  - lscpu
  - python -c 'import numpy; numpy.show_config()'
  - black --check --verbose -S -l 79 .
  - pytest --cov=fitgrid

after_success:

deploy:

  - provider: script
    skip_cleanup: true
    script: pip install codecov && codecov
    on:
      branch: main
      condition: $PYV == "3.8"

  # homegrown replacement for pages provider
  - provider: script
    skip_cleanup: true
    script: bash ./ci/ghpages_upload.sh
    on:
      branch: main   # for normal operation
      condition: $PYV == "3.8"
      # all_branches: true  # for testing deploy only

  # conda_upload.sh switches anaconda upload on $TRAVIS_BRANCH
  #    main M.N.P or M.N.P.devX -> /pre-release
  #    tagged vM.N.P -> /main
  #    else dry run, no conda upload
  - provider: script
    skip_cleanup: true
    script: bash ./ci/conda_upload.sh
    on:
      all_branches: true

  - provider: pypi
    skip_cleanup: true
    user: "__token__"
    password: $PYPI_TOKEN
    on:
      # only upload tagged vM.N.P github releases to PyPI
      branch: main
      tags: true
      condition: $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ && $PYV == "3.8"


# ------------------------------------------------------------
# DEPRECATED
# before_install:
#   - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
#   - bash miniconda.sh -b -p $HOME/miniconda
#   - source $HOME/miniconda/etc/profile.d/conda.sh && conda activate
#   - hash -r
#   - conda config --set always_yes yes --set changeps1 no
#   - conda update -q conda
#   - conda install -q conda-build conda-verify
#   - conda info -a
# install:

#   #  09/03/20 build w/ 3.7, conda dependency solver fails ugly w/ py3.8
#   - conda build conda --python 3.7 -c turbach/label/pre-release -c defaults -c conda-forge
#   - conda create -n fitgrid_env fitgrid -c local -c turbach/label/pre-release -c defaults -c conda-forge
#   - conda activate fitgrid_env
#   - conda install black pytest-cov
#   - conda list
#   - lscpu
#   - python -c 'import numpy; numpy.show_config()'
# script:
#   - black --check --verbose -S --line-length=79 .
#   - pytest --cov=fitgrid
# after_success:
#   - pip install codecov && codecov
# # before_deploy:
# deploy:
#   - provider: script
#     skip_cleanup: true
#     script: bash ./ci/conda_upload.sh
#     on:
#       # conda_upload.sh switches on the branch and version string for a
#       # dry run or upload to conda label pre-release or label main
#       all_branches: true

#   # homegrown replacement for TravisCI gh_pages provider
#   - provider: script
#     skip_cleanup: true
#     script: bash ./ci/ghpages_upload.sh
#     on:
#       # all_branches: true   # testing only
#       branch: master  # allow doc updates to master between tagged releases

#   - provider: pypi
#     skip_cleanup: true
#     user: "__token__"
#     password: $PYPI_TOKEN
#     on:
#       # do NOT dry-run PyPI upload on all_branches. file names are
#       # UUIDs in PyPI repo database, can be deleted but not freed. Use
#       # alternate TestPyPI repo or (disposable?) N.N.N.devN, aN, bN, rcN
#       # versions if you must test deploy to PyPI
#       tags: true
#       condition: $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$
